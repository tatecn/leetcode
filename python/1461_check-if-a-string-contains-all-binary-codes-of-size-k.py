class Solution:

    # optimize space complexity
    def hasAllCodes(self, s: str, k: int) -> bool:
        n = len(s)
        if n <= k:
            return False

        num_k_1 = pow(2, k - 1)
        num_k = num_k_1 << 1
        num = int(s[:k], 2)
        flag = [0] * num_k
        flag[num] = 1
        for i in range(k, n, 1):
            if s[i - k] == '1':
                num -= num_k_1
            num <<= 1
            if s[i] == '1':
                num += 1
            flag[num] = 1
        for i in range(num_k):
            if flag[i] != 1:
                return False
        return True

    # def hasAllCodes(self, s: str, k: int) -> bool:
    #     n = len(s)
    #     if n <= k:
    #         return False
    #     nums = set()
    #     num = int(s[:k], 2)
    #     nums.add(num)
    #     num_k_1 = pow(2, k - 1)
    #     for i in range(k, n, 1):
    #         if s[i - k] == '1':
    #             num -= num_k_1
    #         num <<= 1
    #         if s[i] == '1':
    #             num += 1
    #         nums.add(num)
    #     for i in range(pow(2, k)):
    #         if i not in nums:
    #             return False
    #     return True


s = Solution()
# print(s.hasAllCodes("00110110", 2) == True)
# print(s.hasAllCodes("0110", 1) == True)
# print(s.hasAllCodes("0110", 2) == False)
print(s.hasAllCodes(
    "011101100101110101101000011111101011111101110100111100010000010110010010011100110001110010101101011010010001101111000111110000001010100101111001111010110001111011001110100010001111000111010001111100101011100001001011101100010101010110001011110101001101001001111101000100011101110100100100101101110000000110001011100100111111001000100100010011001000101101100010010010001111010111010011110111110001010100000110000111010110001100100110111000111010111000010100100100101011001111010110010101110101000011011101000110001001100111100011000100110010101100001111000100101001111001100001010100100100110100101100111000110010110101010110010110001111010110101111011011100111001010101001011000101101110100001110011110001011000011100011111001110011111101110001110010000111010011110001011010100101110010110110100011111011110010100011111000000001011100110000010101110110111",
    7) == False)
